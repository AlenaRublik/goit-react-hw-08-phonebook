{"version":3,"file":"static/js/793.820b7ff4.chunk.js","mappings":"mQAIaA,EAAQC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kJAUjBC,EAAYH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iIAStBG,GAAUL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iOAYtBM,EAAQR,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,oFAOpBQ,EAAOV,EAAAA,GAAAA,KAAWW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,sHAQlBU,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uVAmBrBa,EAAmBf,EAAAA,GAAAA,EAAQgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6FAO3Be,EAAejB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,6f,SC7DnCiB,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,GAAaC,EAAAA,EAAAA,IAAO,CACxBH,OAAOI,EAAAA,EAAAA,MAASJ,MAAM,iBAAiBK,SAAS,qBAChDJ,UAAUG,EAAAA,EAAAA,MAASC,SAAS,0BA6C9B,EA1CkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,KAACzB,EAAS,CAAA0B,UACRD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLX,cAAeA,EACfY,SATe,SAAHC,EAAAC,GAA4C,IAAtCb,EAAKY,EAALZ,MAAOC,EAAQW,EAARX,SAAca,EAASD,EAATC,UAC3CR,GAASS,EAAAA,EAAAA,IAAM,CAAEf,MAAAA,EAAOC,SAAAA,KACxBa,GACF,EAOME,iBAAkBd,EAAWO,UAE7BQ,EAAAA,EAAAA,MAAChC,EAAO,CAACiC,aAAa,MAAKT,SAAA,EACzBD,EAAAA,EAAAA,KAAC7B,EAAK,CAAA8B,SAAC,mBACPQ,EAAAA,EAAAA,MAAC7B,EAAK,CAAAqB,SAAA,EACJD,EAAAA,EAAAA,KAAClB,EAAI,CAAAmB,SAAC,WACND,EAAAA,EAAAA,KAAChB,EAAK,CACJ2B,YAAY,kCACZC,KAAK,OACLC,KAAK,WAEPb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAW5B,EAAkB0B,KAAK,cAElDJ,EAAAA,EAAAA,MAAC7B,EAAK,CAAAqB,SAAA,EACJD,EAAAA,EAAAA,KAAClB,EAAI,CAAAmB,SAAC,cACND,EAAAA,EAAAA,KAAChB,EAAK,CACJ2B,YAAY,6BACZC,KAAK,WACLC,KAAK,cAEPb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAACC,UAAW5B,EAAkB0B,KAAK,iBAElDb,EAAAA,EAAAA,KAACX,EAAY,CAACuB,KAAK,SAAQX,SAAC,gBAKtC,ECtDA,EATc,WACZ,OACEQ,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAf,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAAC,SAAO,WACPD,EAAAA,EAAAA,KAACiB,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\n\nexport const Title = styled.h2`\n  display: block;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n  font-size: 30px;\n  color: #2d1249;\n\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const FormBox = styled(Form)`\n  margin-top: 50px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  padding: 20px;\n  border-radius: 70px;\n  background: hotpink;\n  box-shadow: -10px -10px 18px #a01270ca;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nexport const Text = styled.span`\n  display: flex;\n  margin-right: auto;\n  justify-content: center;\n  color: white;\n  font-size: 1.5rem;\n`;\n\nexport const Input = styled(Field)`\n  width: 400px;\n  margin: 0 auto;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: box-shadow 0.2s ease;\n\n  &::placeholder {\n    font-size: 20px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n`;\n\nexport const ErrorMessageText = styled.p`\n  text-align: center;\n  margin-top: 10px;\n  color: #2d1249;\n  font-size: 17px;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: rgb(85, 26, 139);\n  color: white;\n  display: flex;\n  width: 120px;\n  min-height: 50px;\n  font-size: 24px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  transition: background-color 1000ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover,\n  &:focus {\n    background-color: rgba(84, 26, 139, 0.323);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { ErrorMessage, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport {\n  ErrorMessageText,\n  Container,\n  Label,\n  Text,\n  Input,\n  FormBox,\n  SubmitButton,\n  Title,\n} from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst userSchema = object({\n  email: string().email('Invalid email').required('Email is required'),\n  password: string().required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <FormBox autoComplete=\"off\">\n          <Title>Authorization</Title>\n          <Label>\n            <Text>Email</Text>\n            <Input\n              placeholder=\"Please enter your email address\"\n              type=\"text\"\n              name=\"email\"\n            />\n            <ErrorMessage component={ErrorMessageText} name=\"email\" />\n          </Label>\n          <Label>\n            <Text>Password</Text>\n            <Input\n              placeholder=\"Please enter your password\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage component={ErrorMessageText} name=\"password\" />\n          </Label>\n          <SubmitButton type=\"submit\">LogIn</SubmitButton>\n        </FormBox>\n      </Formik>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <title>Login</title>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","FormBox","Form","_templateObject3","Label","_templateObject4","Text","_templateObject5","Input","Field","_templateObject6","ErrorMessageText","_templateObject7","SubmitButton","_templateObject8","initialValues","email","password","userSchema","object","string","required","dispatch","useDispatch","_jsx","children","Formik","onSubmit","_ref","_ref2","resetForm","logIn","validationSchema","_jsxs","autoComplete","placeholder","type","name","ErrorMessage","component","_Fragment","LoginForm"],"sourceRoot":""}