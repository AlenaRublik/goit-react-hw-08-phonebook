{"version":3,"file":"static/js/195.2c727d10.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsBar/ContactsBar.styled.jsx","components/ContactsBar/ContactsBar.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form, Field} from 'formik';\nimport styled from 'styled-components';\n\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  align-items: center;\n  gap: 30px;\n  font-size: 20px;\n  margin-bottom: 50px;\n  max-width: 500px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nexport const Text = styled.span`\n  display: flex;\n  margin-right: auto;\n  justify-content: center;\n  color: rgb(85, 26, 139);\n  font-size: 1.5rem;\n`;\n\nexport const InputName = styled(Field)`\n  width: 400px;\n  margin: 0 auto;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: box-shadow 0.2s ease;\n\n  &::placeholder {\n    font-size: 20px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n`;\n\nexport const InputTel = styled(InputName)``;\n\nexport const Button = styled.button`\n  background-color: rgb(85, 26, 139);\n  color: white;\n  display: flex;\n  width: 120px;\n  min-height: 50px;\n  font-size: 24px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  transition: background-color 1000ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover,\n  &:focus {\n    background-color: rgba(84, 26, 139, 0.323);\n  }\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  margin-top: 10px;\n  color: #0c0c0c;\n  font-size: 17px;\n  -webkit-text-stroke: 1px black;\n  -webkit-text-fill-color: white;\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport PropTypes from 'prop-types';\nimport { MdPersonAdd } from 'react-icons/md';\nimport {\n  FormBox,\n  InputName,\n  InputTel,\n  Button,\n  Message,\n  Label,\n  Text,\n} from './ContactForm.styled';\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst userSchema = object({\n  name: string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('⚠️Please enter name.'),\n  number: string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please enter number.'),\n});\n\nconst FormContact = ({ onSubmit }) => {\n  function handleSubmit({ name, number }, { resetForm }) {\n    onSubmit(name, number);\n    resetForm();\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={userSchema}\n    >\n      <FormBox autoComplete=\"off\">\n        <Label>\n          <Text>Name</Text>\n          <InputName placeholder=\"Enter contact name\" type=\"text\" name=\"name\" />\n          <ErrorMessage component={Message} name=\"name\" />\n        </Label>\n        <Label>\n          <Text>Phone</Text>\n          <InputTel\n            placeholder=\"Enter contact phone\"\n            type=\"tel\"\n            name=\"number\"\n          />\n          <ErrorMessage component={Message} name=\"number\" />\n        </Label>\n        <Button type=\"submit\">\n          <MdPersonAdd />\n        </Button>\n      </FormBox>\n    </Formik>\n  );\n};\n\nFormContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContact;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const filterListContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const LiItem = styled.li`\n  padding-left: 8px;\n  padding-right: 8px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  background-color: rgba(85, 26, 139, 0.8);\n  border: 1px solid hotpink;\n`;\nexport const SpanIcon = styled.span`\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n\nexport const SpanName = styled.span`\n  color: #f9459f;\n  -webkit-text-stroke: 1px #f9459f;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const SpanNumber = styled.span`\n  color: #f2eeff;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const ButtonDlt = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: auto;\n  text-align: center;\n  background-color: transparent;\n  cursor: pointer;\n  color: #07c274;\n  border-radius: 50%;\n  border-color: transparent;\n  outline: none;\n  transition: transform 250ms ease-in;\n  :hover,\n  :focus {\n    svg {\n      transform: scale(1.1);\n    }\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n    transition: transform 250ms linear;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { RiContactsLine } from 'react-icons/ri';\nimport { BsFillTrash3Fill } from 'react-icons/bs';\nimport {\n  LiItem,\n  SpanIcon,\n  SpanName,\n  SpanNumber,\n  ButtonDlt,\n} from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n  return (\n    <LiItem key={id}>\n      <SpanIcon>\n        <RiContactsLine />\n      </SpanIcon>\n      <SpanName>{name}</SpanName>\n      <SpanNumber>{number}</SpanNumber>\n      <ButtonDlt type=\"button\" onClick={() => handleDelete(id)}>\n        <BsFillTrash3Fill />\n      </ButtonDlt>\n    </LiItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const UlList = styled.ul`\n  width: 500px;\n  margin: 0 auto;\n  text-align: center;\n`;","import { useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport ContactItem from '../ContactItem';\nimport { UlList } from './Contacts.styled';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = (() => {\n    return contacts\n      .filter(\n        contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n          contact.number.includes(filter.toLowerCase())\n      );\n  })();\n\n  return (\n    <>\n      <UlList>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} name={name} number={number} id={id} />;\n        })}\n      </UlList>\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n  color: rgb(85, 26, 139);\n  -webkit-text-stroke: 0.5px rgb(85, 26, 139);\n  font-size: 16px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  min-width: 500px;\n  margin: 0 auto;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: box-shadow 0.2s ease;\n\n  &::placeholder {\n    font-size: 20px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filter/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nconst SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n  return (\n    <Label>\n      Find contacts by name or number\n      <Input type=\"text\" name=\"filter\" onChange={handleFilter} />\n    </Label>\n  );\n};\n\nexport default SearchFilter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\nflex-direction: row-reverse;\n  display: flex;\n  width: 700px;\n  margin: 50px auto;\n  gap: 100px;\n  justify-content: center;\n`;\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: rgb(85, 26, 139);\n`;\n\nexport const Text = styled.h2`\n  font-size: 32px;\n  color: rgb(85, 26, 139);\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  width: 500px;\n  padding: 10px;\n  font-size: 24px;\n  color: #310328;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/contactsOperations';\nimport FormContact from 'components/ContactForm';\nimport Contacts from 'components/Contacts';\nimport SearchFilter from 'components/Filter';\nimport {\n  Message,\n  Title,\n  Wrapper,\n  Text,\n  SectionWrapper,\n} from './ContactsBar.styled';\nimport { toast } from 'react-toastify';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contactsSelectors';\n\nconst ContactsBar = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const notifiesAlert = nameContact => {\n    toast.info(`${nameContact} is already in contacts`);\n  };\n\n  const isContact = (name, number) =>\n    contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n  const onSubmit = (name, number) => {\n    if (isContact(name, number)) {\n      return notifiesAlert(name);\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Wrapper>\n      <SectionWrapper>\n        <Title>Phonebook</Title>\n        <FormContact onSubmit={onSubmit} />\n      </SectionWrapper>\n      <SectionWrapper>\n        <Text>Contacts</Text>\n\n        {!error && isLoading}\n\n        {!error && !isLoading && contacts.length === 0 ? (\n          <Message>You can add your contacts 👉 </Message>\n        ) : (\n          <>\n            <SearchFilter />\n            <Contacts />\n          </>\n        )}\n      </SectionWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ContactsBar;\n","import ContactsBar from 'components/ContactsBar';\nimport { useAuth } from 'hooks';\n\nconst Contacts = () => {\n  const { isLoading } = useAuth();\n\n  return (\n    <>\n      <title>Contacts</title>\n\n      {isLoading}\n      <ContactsBar />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormBox","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Text","_templateObject3","InputName","Field","_templateObject4","InputTel","_templateObject5","Button","_templateObject6","Message","_templateObject7","initialValues","name","number","userSchema","object","string","matches","required","_ref","onSubmit","_jsx","Formik","_ref2","_ref3","resetForm","validationSchema","children","_jsxs","autoComplete","placeholder","type","ErrorMessage","component","MdPersonAdd","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","createSelector","toLowerCase","includes","LiItem","SpanIcon","SpanName","SpanNumber","ButtonDlt","id","dispatch","useDispatch","RiContactsLine","onClick","deleteContact","handleDelete","BsFillTrash3Fill","UlList","useSelector","visibleContacts","contact","_Fragment","map","ContactItem","Input","onChange","value","target","filterContacts","Wrapper","SectionWrapper","Title","useEffect","fetchContacts","FormContact","some","isContact","nameContact","toast","concat","addContact","length","SearchFilter","Contacts","useAuth","ContactsBar"],"sourceRoot":""}